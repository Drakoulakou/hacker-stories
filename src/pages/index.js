import { useState, useEffect } from "react";
import Head from "next/head";
import Image from "next/image";
import localFont from "next/font/local";
import styles from "@/styles/Home.module.css";
import StoryItem from "@/components/StoryItem";

export default function Home() {
  const [query, setQuery] = useState("");
  const [suggestions, setSuggestions] = useState([]);
  const [isDropdownVisible, setIsDropdownVisible] = useState(false);
  const [selectedStories, setSelectedStories] = useState([]);
  const [debouncedQuery, setDebouncedQuery] = useState("");

  useEffect(() => {
    const handler = setTimeout(() => {
      setDebouncedQuery(query);
    }, 500);
    return () => {
      clearTimeout(handler);
    };
  }, [query]);

  useEffect(() => {
    if (debouncedQuery.length >= 3) {
      fetch(`https://hn.algolia.com/api/v1/search?query=${debouncedQuery}`)
        .then((response) => response.json())
        .then((data) => {
          const results = data.hits.map((item) => ({
            title: item.title,
            author: item.author,
            num_comments: item.num_comments,
            points: item.points,
          }));
          setSuggestions(results);
          setIsDropdownVisible(true);
        });
    } else {
      setSuggestions([]);
      setIsDropdownVisible(false);
    }
  }, [debouncedQuery]);

  const handleSelectStory = (story) => {
    setSelectedStories((prevStories) => [...prevStories, story]);
    setQuery("");
    setIsDropdownVisible(false);
  };

  const handleDeleteStory = (index) => {
    setSelectedStories(() => selectedStories.filter((item, i) => i !== index));
  };

  const highlightMatch = (title, query) => {
    if (!query) return title;
    if (!title) return "";
    const regex = new RegExp(`(${query})`, "gi");
    const parts = title?.split(regex);

    return (
      <>
        {parts.map((part, index) =>
          part.toLowerCase() === query.toLowerCase() ? (
            <span key={index} style={{ color: "orange" }}>
              {part}
            </span>
          ) : (
            part
          )
        )}
      </>
    );
  };

  return (
    <>
      <Head>
        <title>Hacker Stories</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={`${styles.page}`}>
        <main className={styles.main}>
          <h1>Hacker Stories</h1>
          <div className="auto-suggest-container">
            <input
              type="text"
              value={query}
              onChange={(e) => setQuery(e.target.value)}
              placeholder="Search title"
              className="auto-suggest-input"
            />
            {isDropdownVisible && suggestions.length > 0 && (
              <ul className="suggestions-dropdown">
                {suggestions.map((suggestion, index) => (
                  <StoryItem
                    key={index + 1}
                    title={highlightMatch(suggestion.title, debouncedQuery)}
                    points={suggestion.points}
                    author={suggestion.author}
                    comments={suggestion.num_comments}
                    index={index}
                    suggestionHandler={() => handleSelectStory(suggestion)}
                    suggestionItem
                  />
                ))}
              </ul>
            )}
            <h3 className="selected-stories-title">Saved Stories</h3>
            {selectedStories.length > 0 && (
              <ul>
                {selectedStories.map((story, index) => (
                  <StoryItem
                    key={story.title}
                    title={story.title}
                    points={story.points}
                    author={story.author}
                    comments={story.num_comments}
                    deleteHandler={() => handleDeleteStory(index)}
                    index={index}
                    showDeleteButton
                  />
                ))}
              </ul>
            )}
          </div>
        </main>
        <footer className={styles.footer}>
          Created By Eleftheria Drakoulakou
        </footer>
      </div>
    </>
  );
}
